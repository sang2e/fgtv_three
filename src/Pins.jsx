/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 pin.glb 
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

let vrid;

function Pin_1() {
  const pinRef = useRef();
  const { nodes, materials } = useGLTF("pin.glb");

  // 마우스 호버 커서 변경
  const [hovered, setHovered] = useState(false);
  useEffect(() => {
    document.body.style.cursor = hovered ? "pointer" : "auto";
  }, [hovered]);

  // 핀 로테이션
  useFrame(() => {
    pinRef.current.rotation.y -= 0.015;
  });

  return (
    <mesh
      ref={pinRef}
      name="pin_1"
      geometry={nodes.pin.geometry}
      material={materials["s-red"]}
      position={[-8.7, 1, 3.65]}
      scale={1}
      userData={{ vrid: "DS-00-01" }}
      onPointerOver={(e) => (e.stopPropagation(), setHovered(true))}
      onPointerOut={(e) => (e.stopPropagation(), setHovered(false))}
      onClick={(e) => (
        e.stopPropagation(),
        // (window.parent.location.href =
        //   "../tour.html?startscene=0&startlookat=0,0,120,0,0;"),
        // vrid data 할당
        (vrid = pinRef.current.userData.vrid),
        console.log(vrid)
      )}
    />
  );
}

export default function Pins(props) {
  const group = useRef();
  // const { nodes, materials } = useGLTF("pin.glb");

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        {/* <mesh
          name="pin"
          geometry={nodes.pin.geometry}
          material={materials["s-red"]}
          position={[-0.009, 0.001, 0.004]}
          scale={0.001}
        /> */}
        <Pin_1 />
      </group>
    </group>
  );
}

useGLTF.preload("pin.glb");
